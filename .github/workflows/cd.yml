name: cd

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy_job:
    name: Azure Static Web Apps deploy
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-npm
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install package dependencies
        run: npm install

      - name: Build dist files
        run: npm run build

      - name: Lint project
        run: npm run lint

      - name: Run unit tests
        run: npm run test --if-present

      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "dist" # Application build output generated by a previous (Build dist files) step
          api_location: "api" # API source code path (optional)
          skip_app_build: true # Whether to Skip app build. true to bypass automatic build process and just deploy the app that was built in a previous step (optional)
          output_location: "" # Built app content directory. Set `output_location` to empty if `skip_app_build` is true (optional)
